name: box4kids-server

networks:
  internal:
    driver: bridge

volumes:
  postgres_data:
  redis_data:

services:
  postgres:
    image: mirror.gcr.io/library/postgres:15
    env_file: [.env]
    ports:
      - "127.0.0.1:5432:5432" # оставь, если подключаешься с хоста (psql/IDE)
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB"']
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks: [internal]

  redis:
    image: mirror.gcr.io/library/redis:7-alpine
    env_file: [.env]
    ports:
      - "127.0.0.1:6379:6379" # можно убрать, если не нужен доступ с хоста
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks: [internal]

  migrate:
    build:
      context: .
      # dockerfile: Dockerfile.dev  # раскомментируй, если используешь dev-версию
    image: box4kids-server-api:dev
    env_file: [.env]
    depends_on:
      postgres:
        condition: service_healthy
    command: alembic upgrade head
    restart: "no"
    networks: [internal]
    # Если alembic.ini не в корне, укажи:
    # working_dir: /app/path/to/alembic_root

  api:
    build:
      context: .
      # dockerfile: Dockerfile.dev
    env_file: [.env]
    image: box4kids-server-api:dev
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload --log-level debug
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://127.0.0.1:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks: [internal]
