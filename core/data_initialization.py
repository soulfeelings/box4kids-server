from sqlalchemy.orm import Session
from models.interest import Interest
from models.skill import Skill
from models.toy_category import ToyCategory
from repositories.interest_repository import InterestRepository
from repositories.skill_repository import SkillRepository
from repositories.toy_category_repository import ToyCategoryRepository


# –•–∞—Ä–¥–∫–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
INTERESTS_DATA = [
    {"name": "üß∏ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã"},
    {"name": "üß∏ –ü–ª—é—à–µ–≤—ã–µ"},
    {"name": "üé≤ –†–æ–ª–µ–≤—ã–µ"},
    {"name": "üß† –†–∞–∑–≤–∏–≤–∞—é—â–∏–µ"},
    {"name": "‚öôÔ∏è –¢–µ—Ö–Ω–∏–∫–∞"},
    {"name": "üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ"},
]


# –•–∞—Ä–¥–∫–æ–¥ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤
SKILLS_DATA = [
    {"name": "‚úã –ú–æ—Ç–æ—Ä–∏–∫–∞"},
    {"name": "üß† –õ–æ–≥–∏–∫–∞"},
    {"name": "üé≠ –í–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ"},
    {"name": "üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ"},
    {"name": "üí¨ –†–µ—á—å"},
]


# –•–∞—Ä–¥–∫–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–≥—Ä—É—à–µ–∫
TOY_CATEGORIES_DATA = [
    {"name": "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä", "description": "–†–∞–∑–≤–∏–≤–∞—é—â–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π", "icon": "üß©"},
    {"name": "–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –Ω–∞–±–æ—Ä", "description": "–ù–∞–±–æ—Ä—ã –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ —Ä–∏—Å–æ–≤–∞–Ω–∏—è", "icon": "üé®"},
    {"name": "–ú—è–≥–∫–∞—è –∏–≥—Ä—É—à–∫–∞", "description": "–ú—è–≥–∫–∏–µ –ø–ª—é—à–µ–≤—ã–µ –∏–≥—Ä—É—à–∫–∏", "icon": "üß∏"},
    {"name": "–ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∞", "description": "–õ–æ–≥–∏—á–µ—Å–∫–∏–µ –∏–≥—Ä—ã –∏ –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏", "icon": "üß†"},
    {"name": "–ü—Ä–µ–º–∏—É–º-–∏–≥—Ä—É—à–∫–∞", "description": "–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏–µ –∏–≥—Ä—É—à–∫–∏", "icon": "‚≠ê"},
]


def initialize_interests(db: Session) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤"""
    repository = InterestRepository(db)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã
    existing_interests = repository.get_all()
    if existing_interests:
        print("–ò–Ω—Ç–µ—Ä–µ—Å—ã —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—ã
    interests = repository.create_many(INTERESTS_DATA)
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(interests)} –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤")


def initialize_skills(db: Session) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤—ã–∫–æ–≤"""
    repository = SkillRepository(db)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –Ω–∞–≤—ã–∫–∏
    existing_skills = repository.get_all()
    if existing_skills:
        print("–ù–∞–≤—ã–∫–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        return
    
    # –°–æ–∑–¥–∞–µ–º –Ω–∞–≤—ã–∫–∏
    skills = repository.create_many(SKILLS_DATA)
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(skills)} –Ω–∞–≤—ã–∫–æ–≤")


def initialize_toy_categories(db: Session) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–≥—Ä—É—à–µ–∫"""
    repository = ToyCategoryRepository(db)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    existing_categories = repository.get_all()
    if existing_categories:
        print("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–≥—Ä—É—à–µ–∫ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories = repository.create_many(TOY_CATEGORIES_DATA)
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏–≥—Ä—É—à–µ–∫")


def initialize_all_data(db: Session) -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        initialize_interests(db)
        initialize_skills(db)
        initialize_toy_categories(db)
        print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        raise 